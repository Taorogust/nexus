name: CI â€“ Auth Service

on:
  push:
    paths:
      - 'services/auth/**'
  pull_request:
    paths:
      - 'services/auth/**'

env:
  AWS_REGION: eu-west-1
  AWS_ACCOUNT_ID: 763695378748
  ECR_REGISTRY: 763695378748.dkr.ecr.eu-west-1.amazonaws.com
  SERVICE: auth

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go 1.23
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install linters
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run linters
        run: |
          cd services/auth
          golangci-lint run ./...

      - name: Run unit tests
        run: |
          cd services/auth
          go test ./... -v -coverprofile=coverage.out

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker image
        run: |
          cd services/auth
          docker build \
            -t $ECR_REGISTRY/$SERVICE:${{ github.sha }} \
            -t $ECR_REGISTRY/$SERVICE:latest \
            .

      - name: Push to ECR
        if: github.event_name != 'pull_request'
        run: |
          docker push $ECR_REGISTRY/$SERVICE:${{ github.sha }}
          docker push $ECR_REGISTRY/$SERVICE:latest

      - name: Install Cosign
        run: |
          COSIGN_VERSION="v2.0.0"
          wget -qO cosign \
            https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign

      - name: Sign Docker image
        if: github.event_name != 'pull_request'
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign --key ${{ secrets.COSIGN_KEY }} \
            $ECR_REGISTRY/$SERVICE:latest

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: auth-coverage
          path: services/auth/coverage.out
